{"ast":null,"code":"var _jsxFileName = \"D:\\\\nsoweb\\\\webnso\\\\nsoweb\\\\src\\\\components\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport API_BASE_URL from './apiConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [isLoggedIn, setIsLoggedIn] = useState(() => {\n    return localStorage.getItem('isLoggedIn') === 'true';\n  });\n  const [username, setUsername] = useState(() => localStorage.getItem('username') || '');\n  const [token, setToken] = useState(() => localStorage.getItem('token') || '');\n  const [kh, setKh] = useState(null);\n  const [phone, setPhone] = useState(null);\n  const [created_at, setTime] = useState(null);\n  const [balance, setBalance] = useState(0);\n  const resetKh = () => {\n    if (!isLoggedIn) {\n      setKh(null);\n    }\n  };\n  useEffect(() => {\n    localStorage.setItem('isLoggedIn', isLoggedIn);\n    localStorage.setItem('username', username);\n    localStorage.setItem('token', token);\n  }, [isLoggedIn, username, token]);\n  useEffect(() => {\n    if (isLoggedIn) {\n      updateUserData();\n    }\n  }, [isLoggedIn]);\n  const updateUserData = () => {\n    if (isLoggedIn && token && username) {\n      fetch(`${API_BASE_URL}/api/auth/verify`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          username\n        })\n      }).then(response => {\n        if (!response.ok) {\n          throw new Error('Failed to verify user');\n        }\n        return response.json();\n      }).then(data => {\n        setKh(data.kh);\n        setPhone(data.phone);\n        setTime(data.created_at);\n        setBalance(data.balance);\n      }).catch(error => console.error('Error fetching user data:', error));\n    }\n  };\n  const resetAllData = () => {\n    setIsLoggedIn(false);\n    setUsername('');\n    setToken('');\n    setKh(null);\n    updateUserData();\n    localStorage.removeItem('isLoggedIn');\n    localStorage.removeItem('username');\n    localStorage.removeItem('token');\n  };\n  const login = (username, token) => {\n    setIsLoggedIn(true);\n    setUsername(username);\n    setToken(token);\n    resetKh();\n    updateUserData();\n  };\n  const logout = () => {\n    resetAllData();\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn,\n      username,\n      kh,\n      phone,\n      created_at,\n      balance,\n      updateUserData,\n      resetKh,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n_s2(AuthProvider, \"i1Tu/aoa/nsCfExDddDUO3syZPs=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","API_BASE_URL","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","isLoggedIn","setIsLoggedIn","localStorage","getItem","username","setUsername","token","setToken","kh","setKh","phone","setPhone","created_at","setTime","balance","setBalance","resetKh","setItem","updateUserData","fetch","method","headers","body","JSON","stringify","then","response","ok","Error","json","data","catch","error","console","resetAllData","removeItem","login","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/nsoweb/webnso/nsoweb/src/components/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport API_BASE_URL from './apiConfig'; \r\n\r\n\r\nconst AuthContext = createContext();\r\nexport const useAuth = () => {\r\n    return useContext(AuthContext);\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [isLoggedIn, setIsLoggedIn] = useState(() => {\r\n        return localStorage.getItem('isLoggedIn') === 'true';\r\n    });\r\n    const [username, setUsername] = useState(() => localStorage.getItem('username') || '');\r\n    const [token, setToken] = useState(() => localStorage.getItem('token') || '');\r\n    const [kh, setKh] = useState(null); \r\n    const [phone, setPhone] = useState(null); \r\n    const [created_at, setTime] = useState(null);\r\n    const [balance, setBalance] = useState(0); \r\n\r\n    const resetKh = () => {\r\n        if (!isLoggedIn) {\r\n            setKh(null);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('isLoggedIn', isLoggedIn);\r\n        localStorage.setItem('username', username);\r\n        localStorage.setItem('token', token);\r\n    }, [isLoggedIn, username, token]);\r\n    \r\n    useEffect(() => {\r\n        if (isLoggedIn) {\r\n            updateUserData();\r\n        }\r\n    }, [isLoggedIn]);\r\n\r\n    const updateUserData = () => {\r\n        if (isLoggedIn && token && username) { \r\n            fetch(`${API_BASE_URL}/api/auth/verify`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${token}`\r\n                },\r\n                body: JSON.stringify({ username })\r\n            })\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to verify user');\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(data => {\r\n                setKh(data.kh);\r\n                setPhone(data.phone);\r\n                setTime(data.created_at);\r\n                setBalance(data.balance);\r\n            })\r\n            .catch(error => console.error('Error fetching user data:', error));\r\n        }\r\n    };\r\n    \r\n\r\n    const resetAllData = () => {\r\n        setIsLoggedIn(false);\r\n        setUsername('');\r\n        setToken('');\r\n        setKh(null);\r\n        updateUserData(); \r\n        localStorage.removeItem('isLoggedIn');\r\n        localStorage.removeItem('username');\r\n        localStorage.removeItem('token');\r\n    };\r\n\r\n    const login = (username, token) => {\r\n        setIsLoggedIn(true);\r\n        setUsername(username);\r\n        setToken(token);\r\n        resetKh(); \r\n        updateUserData(); \r\n    };\r\n    \r\n    \r\n    const logout = () => {\r\n        resetAllData();\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ isLoggedIn, username, kh, phone, created_at, balance, updateUserData, resetKh, login, logout }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}